---
title: "Mat06 loggers"
format: html
editor: visual
---

## MAT06 Block 1 and 2 met and soil data

Greenhouse and control air temperature/RH, soil temperatures and soil moisture are monitored in Block 1. Block 2 only has greenhouse temperature/RH sensor.

```{r}
#| echo: false
#| output: false
# REQUIRED PACKAGES ------------------------------------------------------
packages <- c("ggplot2","ggtext","htmlwidgets","janitor","lubridate",
              "plotly","readxl","stringr","tidyverse")


# Packages loading
invisible(lapply(packages, library, character.only = TRUE))

# Functions --------------------------------------------------------------

source("importCSdata.r")

# Data Files---------------------------------------------------------------

tabl_1 <-  "./current/MAT06_Blk1_Met.dat"
tabl_2 <-  "./current/MAT06_BLK1_Soil.dat"
tabl_3 <-  "./current/MAT06_BLK1_GH_Soil.dat"
tabl_4 <- "./current/MAT06_Blk2_Met.dat"

logger_file <-  c(tabl_1,tabl_2, tabl_3, tabl_4)

# Read all tables into a dataframe

logger_data<- logger_file %>% map(function(x) importCSdata(x))
  
  met_data <-  logger_data[[1]] %>%
    rename(ct_air_3m_avg = air_3m_avg, ct_rh = rh) %>%
    clean_names() %>%
    arrange(timestamp)%>%
    filter(timestamp > max(timestamp) %m-% months(6))
  
  
  soil_data <- logger_data[[2]]  %>% 
    clean_names() %>%
    arrange(timestamp)%>%
    filter(timestamp > max(timestamp) %m-% months(6))
  
  
  soil_GH_data <- logger_data[[3]]  %>% 
    clean_names() %>%
    arrange(timestamp)%>%
    filter(timestamp > max(timestamp) %m-% months(6))
  
  met_data_blk2 <-  logger_data[[4]] %>%
    rename(gh_air_avg = ghairtc_avg, gh_rh = ghrh) %>% 
    clean_names() %>%
    arrange(timestamp)%>%
    filter(timestamp > max(timestamp) %m-% months(6))
  
  # set the min and max for the initial x axis display in ggplotly
  max_date <- max(c(met_data$timestamp,soil_data$timestamp,soil_GH_data$timestamp,
                    met_data_blk2$timestamp))
  min_date <-max_date - lubridate::days(5) 
```

```{r}
#| echo: false
  p1 <- ggplot(met_data) +
    geom_line(aes(x=timestamp, y=ct_air_3m_avg, color = "control")) +
    geom_line(aes(x=timestamp, y=gh_air_avg,color = "greenhouse")) +
    geom_hline(aes(yintercept = 0))+
    scale_x_datetime(expand = expansion(mult = c(.01, .01))) +
    scale_color_manual(values = c(
      'control' = 'blue',
      'greenhouse' = 'red')) +
    labs(title = "MAT2006-blk1 Met Data",
         subtitle = "Control, Greenhouse",
         x = "Date",
         y = "Degrees Celsius",
         color = '') +
    theme_bw() +
    theme(plot.title = element_text(hjust = 0.7),
          legend.position = "top")
  p2 <- ggplot(met_data) +
    theme_bw() +
    geom_line(aes(x=timestamp,y=ct_rh,color="control RH"),linewidth=.1,linetype="twodash")+
    geom_line(aes(x=timestamp,y=gh_rh,color="greenhouse RH"),linewidth=.1,linetype="dotted")+
    scale_x_datetime()+
    scale_color_manual(values = c(
      "control RH" = "blue",
      "greenhouse RH" = "red")) +
    labs(title = "MAT2006-Blk1 Air Temperature/RH",
         x = "Date",
         y = "Relative Humidity (%)",
         color = '')+
    theme(plot.title = element_text(hjust = 0.7),
          axis.title.y = element_markdown(color = "black", size = 8))
  p3 <- ggplot(met_data) +
    geom_line(aes(x=timestamp, y=battv_min, color = "Battery min")) +
    scale_x_datetime()+
    labs(title ="TMAT2006-Blk1 Battery",
         x = "Date",
         y = "volts",
         color = '')+
    coord_cartesian(ylim = c(8,15)) +
    scale_color_manual(values = c("Battery min" = "black"))+
    theme_bw() 
  
  p1_blk2 <- ggplot(met_data_blk2) +
    geom_line(aes(x=timestamp, y=gh_air_avg,color = "greenhouse")) +
    geom_hline(aes(yintercept = 0))+
    geom_line(data = met_data,aes(x=timestamp, y=ct_air_3m_avg, color = "Block 1 control")) +
    scale_x_datetime(expand = expansion(mult = c(.01, .01))) +
    scale_color_manual(values = c(
      'Block 1 control' = 'blue',
      'greenhouse' = 'red')) +
    labs(title = "MAT2006-blk2 Met Data",
         subtitle = "Block 1 Control Block 2 Greenhouse",
         x = "Date",
         y = "Degrees Celsius",
         color = '') +
    theme_bw() +
    theme(plot.title = element_text(hjust = 0.7),
          legend.position = "top")
  
  p2_blk2 <- ggplot(met_data_blk2) +
    theme_bw() +
    geom_line(aes(x=timestamp,y=gh_rh,color="greenhouse RH"),linewidth=.1,linetype="dotted")+
    geom_line(data= met_data, aes(x=timestamp,y=ct_rh,color="Block 1 control RH"),linewidth=.1,linetype="twodash")+
    scale_x_datetime()+
    scale_color_manual(values = c(
      "Block 1 control RH" = "blue",
      "greenhouse RH" = "red")) +
    labs(title = "MAT2006-Blk2 Air Temperature/RH",
         x = "Date",
         y = "Relative Humidity (%)",
         color = '')+
    theme(plot.title = element_text(hjust = 0.7),
          axis.title.y = element_markdown(color = "black", size = 8))
  
  p3_blk2 <- ggplot(met_data_blk2) +
    geom_line(aes(x=timestamp, y=battv_min, color = "Battery min")) +
    scale_x_datetime()+
    labs(title ="TMAT2006-Blk2 Battery",
         x = "Date",
         y = "volts",
         color = '')+
    coord_cartesian(ylim = c(8,15)) +
    scale_color_manual(values = c("Battery min" = "black"))+
    theme_bw() 
  
  # ---- Setting up interactive plots with ggplotly-------
  # Note for rangeslider to work:
  # the dynamicTicks needs to be true for the buttons to show
  # autorange needs to be FALSE for range to work
  
  # Define xaxis options for using a range slider
  xax<- list( 
    autorange=F,
    range= list(min_date, max_date),
    rangeselector = list(
      buttons = list(
        list(count = 1, label = "1 week", strp ="week", stepmode = "backward"),
        list(count = 3, label = "3 mo", step = "month", stepmode = "backward"),
        list(count = 6, label = "6 mo", step = "month", stepmode = "backward"),
        list(count = 1, label = "YTD", step = "year", stepmode = "todate"),
        list(step = "all")
      )),
    rangeslider = list(type = "date", thickness=0.05))
  
# Create a list of arguments for the annotation layout to add titles to the subplots
  anno_agr <-list(x = .5,
                  text = "",
                  y = 1,
                  yref = "paper",
                  xref = "paper",
                  xanchor = "center",
                  yanchor = "top",
                  yshift = 20,
                  showarrow = FALSE,
                  font = list(size = 15))
  
  # Air Temperature panel ---------------------------------------------------
  # First convert ggplot plots to ggplotly
  
  #Title plot 1
  anno_agr$text <- "Air Temperature"
  p1_p <- ggplotly(p1,dynamicTicks = T) %>% 
          layout(xaxis= xax,
                 yaxis =list(zerolinewidth = .1),
                 annotations = anno_agr) %>% 
    partial_bundle()

  #Title plot 2
  anno_agr$text <- "Relative Humidty"
  p2_p <- ggplotly(p2,dynamicTicks = T) %>%
          layout(xaxis= xax,
                 annotations = anno_agr) %>%
    partial_bundle()
  
  #Title plot 3
  anno_agr$text <- "Battery"
  p3_p <- ggplotly(p3,dynamicTicks = T) %>% 
    layout(xaxis= list( 
      autorange=F,range= list(min_date, max_date)),
      yaxis = list(autorange = FALSE),
      annotations = anno_agr) %>% 
    partial_bundle()
  
  #Put the plots together on a panel 
  panel1 <- subplot(p2_p,p1_p,p3_p, nrows=3, shareX = TRUE,titleY = T,heights = c(.3,.4,.3),which_layout = 2) %>% 
    layout(title = 'MAT06 Block 1 Air Temperature/RH',margin = 0.01)
  panel1
  
```
